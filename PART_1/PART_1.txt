GIT. Part 1
  
JSON
 4. Создать внешний репозиторий c названием JSON.
 		https://github.com/krisrazumeiko/JSON

 5. Клонировать репозиторий JSON на локальный компьютер.
 		git clone git@github.com:krisrazumeiko/JSON.git

 6. Внутри локального JSON создать файл “new.json”.
 		> new.json

 7. Добавить файл под гит.
 		git add .

 8. Закоммитить файл.
 		git commit -m "first commit"

 9. Отправить файл на внешний GitHub репозиторий.
 		git push

 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.

 		{
			"first_name": "Kristina",
			"surname": "Razumeika",
			"age": 31,
			"number_of_pets": 1,
			"expected_salary": 750
		}

 11. Отправить изменения на внешний репозиторий.
 		git commit -am "new.json v2"
 		git push

 12. Создать файл preferences.json
 		> preferences.json

 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON.
 		vim preferences.json
 		
 		{
        	"favorites":{
                "movie": "Pirates of the Caribbean: The Curse of the Black Pearl",
                "tv_series": "True_Detective",
                "food": "Meat and vegetables",
                "season": "Spring",
                "country": "Montenegro"
        	}
		}

 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON
 		vim skill.json
		{
		        "course":{
		                "hard_skills": {
		                        "1": "testing_practice",
		                        "2": "terminal_Linux",
		                        "3": "git_hub",
		                        "4": "sql",
		                        "5": "postman",
		                        "6": "json",
		                        "7": "xml",
		                        "8": "dev_tools",
		                        "9": "english_language"
		                },
		                "soft_skills": {
		                        "1": "responsibility",
		                        "2": "communication",
		                        "3": "attentiveness",
		                        "4": "discipline",
		                        "5": "respect"
		                }
		        }
		}

 15. Отправить сразу 2 файла на внешний репозиторий.
 		git add .
 		git commit -m "added new files" && git push

 16. На веб интерфейсе создать файл bug_report.json.
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.
 		{
		   "bug_report": {
		      "id": 1001,
		      "title": "Ошибка 500 после нажатия на кнопку Аторизоваться на форме входа",
		      "severity": "Blocker",
		      "priority": "High",
		      "environment": "Windows 11 pro x64, Chrome Version 115.0.5790.171 (Official Build) (64-bit)",
		      "precondition": "Открыть браузер и зайти на сайт",
		      "steps_to_reproduce": [
		         "Открыть браузер",
		         "Зайти на сайт",
		         "Нажать на кнопку Войти",
		         "Ввести логин и пароль",
		         "Нажать кнопку Авторизоваться"
		      ],
		      "expected_result": "Пользователь авторизуется на сайте",
		      "actual_result": "Ошибка 500 после нажатия кнопки Авторизоваться"
		   }
		}

 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 20. Синхронизировать внешний и локальный репозиторий JSON
 		git pull


XML
 21. Создать внешний репозиторий c названием XML.
 22. Клонировать репозиторий XML на локальный компьютер.
 		git clone git@github.com:krisrazumeiko/XML.git

 23. Внутри локального XML создать файл “new.xml”.
 		> new.xml

 24. Добавить файл под гит.
 		git add new.xml

 25. Закоммитить файл.
 		git commit -m "first commit"

 26. Отправить файл на внешний GitHub репозиторий.
 		git push

 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
		
		vim new.xml
		<?xml version="1.0" encoding="UTF-8"?>
		<note>
	        <first_name>Kristina</first_name>
	        <surname>Razumeika</surname>
	        <age>31</age>
	        <number_of_pets>1</number_of_pets>
	        <expected_salary>750</expected_salary>
		</note>

 28. Отправить изменения на внешний репозиторий.
 		git commit -am "modified new.xml"

 29. Создать файл preferences.xml
 		> preferences.xml

 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
 		
 		vim preferences.xml
 		<?xml version="1.0" encoding="UTF-8?>
		<favorites>
	        <movie>Pirates of the Caribbean: The Curse of the Black Pearl</movie>
	        <tv_series>True Detective</tv_series>
	        <food>Meat and vegetables</food>
	        <season>Spring</season>
	        <country>Montenegro</country>
		</favorites>

 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
 		vim skills.xml
 		<?xml version="1.0" encoding="UTF-8"?>
		<course>
		        <hard_skills>
		                <1>testing practice</1>
		                <2>terminal Linux</2>
		                <3>github</3>
		                <4>sql</4>
		                <5>postman</5>
		                <6>json</6>
		                <7>xml</7>
		                <8>dev tools</8>
		                <9>english language</9>
		        </hard_skills>
		        <soft_skills>
		                <1>responsibility</1>
		                <2>communication<2>
		                <3>attentiveness</3>
		                <4>discipline</4>
		                <5>respect</5>
		        <soft_skills>
		</course>

 32. Сделать коммит в одну строку.
 		git add .
 		git commit -m "new files"

 33. Отправить сразу 2 файла на внешний репозиторий.
 		git push

 34. На веб интерфейсе создать файл bug_report.xml.
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.
 		<?xml version="1.0" encoding="UTF-8"?>
		<bug_report>
		      <id>1001</id>
		      <title>Ошибка 500 после нажатия на кнопку Аторизоваться на форме входа</title>
		      <severity>Blocker</severity>
		      <priority>High</priority>
		      <environment>Windows 11 pro x64, Chrome Version 115.0.5790.171 (Official Build) (64-bit)</environment>
		      <precondition>Открыть браузер и зайти на сайт</precondition>
		      <steps_to_reproduce>
		         <1>Открыть браузер</1>
		         <2>Зайти на сайт</2>
		         <3>Нажать на кнопку Войти</3>
		         <4>Ввести логин и пароль</4>
		         <5>Нажать кнопку Авторизоваться</5>
		      </steps_to_reproduce>
		      <expected_result>Пользователь авторизуется на сайте</expected_result>
		      <actual_result>Ошибка 500 после нажатия кнопки Авторизоваться</actual_result>
		</bug_report>

 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 38. Синхронизировать внешний и локальный репозиторий XML
 		git pull


TXT
 1. Создать внешний репозиторий c названием TXT.
 2. Клонировать репозиторий TXT на локальный компьютер.
 		git clone git@github.com:krisrazumeiko/TXT.git

 3. Внутри локального TXT создать файл “new.txt”.
 		> new.txt

 4. Добавить файл под гит.
 		git add .

 5. Закоммитить файл.
 		git commit -m "first commit"

 6. Отправить файл на внешний GitHub репозиторий.
 		git push

 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
 		
 		vim new.txt
		Personal information:
			First name, Surname: Razumeika Kristina
			Age: 31
			Number of pets: 1
			Future expected salary: 750

 8. Отправить изменения на внешний репозиторий.
 		git commit -am "modf new.txt" && git push

 9. Создать файл preferences.txt
 		> preferences.txt

 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
 		
 		vim preferences.txt
		Information about my preferences:
			Favorite movie: Pirates of the Coast: The Curse of the Black Pearl.
			Favorite TV series: True Detective
			Favorite food: Meat and vegetables
			Favorite season: Spring
			Country I wanted to visit: Montenegro

 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
 		
 		vim skills.txt
 		Information about the skills that will be studied on the course:
	        Hard skills:
	                - testing_practice,
	                - terminal_Linux,
	                - Git_hub,
	                - SQL,
	                - Postman,
	                - JSON, XML,
	                - DevTools,
	                - English language.
	        Soft skills:
	                - responsibility,
	                - communication,
	                - attentiveness,
	                - discipline,
	                - respect.

 12. Сделать коммит в одну строку.
 		git add . && git commit -m "new files"

 13. Отправить сразу 2 файла на внешний репозиторий.
 		git push

 14. На веб интерфейсе создать файл bug_report.txt.
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.

 	Bug report: 
      ID: 1001,
      Title: Ошибка 500 после нажатия на кнопку Аторизоваться на форме входа
      Severity: Blocker
      Priority: High
      Environment: Windows 11 pro x64, Chrome Version 115.0.5790.171 (Official Build) (64-bit)
      Precondition: Открыть браузер и зайти на сайт
      Steps_to_reproduce: 
         1. Открыть браузер
         2. Зайти на сайт
         3. Нажать на кнопку Войти
         4. Ввести логин и пароль
         5. Нажать кнопку Авторизоваться
    
      Expected result: "Пользователь авторизуется на сайте
      Actual result: "Ошибка 500 после нажатия кнопки Авторизоваться

 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
 18. Синхронизировать внешний и локальный репозиторий TXT
 		git pull